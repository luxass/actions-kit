// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`expect \`actions-kit.d.ts\` to be generated 1`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

async function run() {
    const type = core__namespace.getInput("type");
    const whoToGreet = core__namespace.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core__namespace.info(message);
    if (type === "error") {
        core__namespace.setFailed("This is an error!");
    }
    core__namespace.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`expect \`actions-kit.d.ts\` to be generated 2`] = `
"// generated by 'actions-kit'
        import "@actions/core";

        

declare module "@actions/core" {

  type InputNames = "type" | "who-to-greet";

  export function getInput(name: InputNames, options?: InputOptions): string;
}
"
`;

exports[`expect \`actions-kit.d.ts\` to include \`ACTION_INPUTS\` 1`] = `
"'use strict';

var core = require('@actions/core');

function _interopNamespaceDefault(e) {
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var core__namespace = /*#__PURE__*/_interopNamespaceDefault(core);

globalThis.ACTION_INPUTS = {
  "type": "type",
  "who-to-greet": "who-to-greet"
};
async function run() {
    const type = core__namespace.getInput("type");
    const whoToGreet = core__namespace.getInput("who-to-greet");
    const message = \`Hello \${whoToGreet}!\`;
    core__namespace.info(message);
    if (type === "error") {
        core__namespace.setFailed("This is an error!");
    }
    core__namespace.setOutput("message", message);
}
run().catch((err) => {
    console.error(err);
    core__namespace.setFailed(err.message);
});
"
`;

exports[`expect \`actions-kit.d.ts\` to include \`ACTION_INPUTS\` 2`] = `
"// generated by 'actions-kit'
        import "@actions/core";

        
declare global {
  export const ACTION_INPUTS: {
  "type": "type",
  "who-to-greet": "who-to-greet"
};
}

declare module "@actions/core" {

  type InputNames = "type" | "who-to-greet";

  export function getInput(name: InputNames, options?: InputOptions): string;
}
"
`;
