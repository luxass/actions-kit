// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`expect \`actions-kit.d.ts\` to be generated 1`] = `
""use strict";
//#region rolldown:runtime
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", {
	value: mod,
	enumerable: true
}) : target, mod));

//#endregion
const core = __toESM(require("@actions/core"));

//#region .vitest-testdirs/vitest-rolldown-expect-actions-kit-d-ts-to-be-generated/index.ts
async function run() {
	const type = core.getInput("type");
	const whoToGreet = core.getInput("who-to-greet");
	const message = \`Hello \${whoToGreet}!\`;
	core.info(message);
	if (type === "error") {
		core.setFailed("This is an error!");
	}
	core.setOutput("message", message);
}
run().catch((err) => {
	console.error(err);
	core.setFailed(err.message);
});

//#endregion"
`;

exports[`expect \`actions-kit.d.ts\` to be generated 2`] = `
"// generated by 'actions-kit'
        import "@actions/core";

        

declare module "@actions/core" {

  type InputNames = "type" | "who-to-greet";

  export function getInput(name: InputNames, options?: InputOptions): string;
}
"
`;

exports[`expect \`actions-kit.d.ts\` to include \`ACTION_INPUTS\` 1`] = `
""use strict";
//#region rolldown:runtime
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {
		key = keys[i];
		if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
			get: ((k) => from[k]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", {
	value: mod,
	enumerable: true
}) : target, mod));

//#endregion
const core = __toESM(require("@actions/core"));

//#region .vitest-testdirs/vitest-rolldown-expect-actions-kit-d-ts-to-include-ACTION_INPUTS/index.ts
globalThis.ACTION_INPUTS = {
	"type": "type",
	"who-to-greet": "who-to-greet"
};
async function run() {
	const type = core.getInput("type");
	const whoToGreet = core.getInput("who-to-greet");
	const message = \`Hello \${whoToGreet}!\`;
	core.info(message);
	if (type === "error") {
		core.setFailed("This is an error!");
	}
	core.setOutput("message", message);
}
run().catch((err) => {
	console.error(err);
	core.setFailed(err.message);
});

//#endregion"
`;

exports[`expect \`actions-kit.d.ts\` to include \`ACTION_INPUTS\` 2`] = `
"// generated by 'actions-kit'
        import "@actions/core";

        
declare global {
  export const ACTION_INPUTS: {
  "type": "type",
  "who-to-greet": "who-to-greet"
};
}

declare module "@actions/core" {

  type InputNames = "type" | "who-to-greet";

  export function getInput(name: InputNames, options?: InputOptions): string;
}
"
`;
